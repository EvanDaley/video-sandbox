{"version":3,"sources":["store.js","components/html_components/VideoSandbox.js","App.js","reportWebVitals.js","index.js"],"names":["useStore","create","set","videoPaths","videoIndex","switchVideos","state","length","sceneIndex","selectScene0","selectScene1","selectScene2","selectScene3","bears","increasePopulation","removeAllBears","Navigation","document","location","origin","window","pathname","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6NAyBeA,EAvBEC,aAAO,SAAAC,GAAG,MAAK,CAC9BC,WAAY,CACV,sBACA,sBAGFC,WAAY,EACZC,aAAc,kBAAMH,GAAI,SAAAI,GAAK,MAAK,CAChCF,YAAcE,EAAMF,WAAa,GAAME,EAAMH,WAAWI,YAG1DC,WAAY,EACZC,aAAc,kBAAMP,GAAI,WACtB,MAAO,CAAEM,WAAY,OAEvBE,aAAc,kBAAMR,GAAI,iBAAO,CAAEM,WAAY,OAC7CG,aAAc,kBAAMT,GAAI,iBAAO,CAAEM,WAAY,OAC7CI,aAAc,kBAAMV,GAAI,iBAAO,CAAEM,WAAY,OAC7CK,MAAO,EACPC,mBAAoB,kBAAMZ,GAAI,SAAAI,GAAK,MAAK,CAAEO,MAAOP,EAAMO,MAAQ,OAC/DE,eAAgB,kBAAMb,EAAI,CAAEW,MAAO,S,OCnBtB,SAASG,IACtB,IAAMZ,EAAaJ,GAAS,SAAAM,GAAK,OAAIA,EAAMF,cACrCD,EAAaH,GAAS,SAAAM,GAAK,OAAIA,EAAMH,cAEtBc,SAASC,SAASC,OAASC,OAAOF,SAASG,SAAWlB,EAAWC,GAEtF,OACE,mCACE,0BCESkB,MAVf,WACE,OACE,mCACE,qBAAKC,UAAU,yBAAf,SACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,M","file":"static/js/main.71168f2d.chunk.js","sourcesContent":["import create from 'zustand'\n\nconst useStore = create(set => ({\n  videoPaths: [\n    '/video/blue_hex.mp4',\n    '/video/red_hex.mp4',\n    // '/video/hex_hdri.mp4',\n  ],\n  videoIndex: 0,\n  switchVideos: () => set(state => ({ \n    videoIndex: ((state.videoIndex + 1) % (state.videoPaths.length)) \n  })),\n\n  sceneIndex: 0,\n  selectScene0: () => set(() => {\n    return { sceneIndex: 0 }\n  }),\n  selectScene1: () => set(() => ({ sceneIndex: 1 })),\n  selectScene2: () => set(() => ({ sceneIndex: 2 })),\n  selectScene3: () => set(() => ({ sceneIndex: 3 })),\n  bears: 0,\n  increasePopulation: () => set(state => ({ bears: state.bears + 1 })),\n  removeAllBears: () => set({ bears: 0 })\n}))\n\nexport default useStore","\nimport useStore from '../../store'\n\nexport default function Navigation() {\n  const videoIndex = useStore(state => state.videoIndex)\n  const videoPaths = useStore(state => state.videoPaths)\n\n  const currentVideo = document.location.origin + window.location.pathname + videoPaths[videoIndex]\n\n  return (\n    <>\n      <div>\n        {/* <video autoPlay muted loop className=\"cover-screen\" key={currentVideo}>\n          <source src={currentVideo} type=\"video/mp4\" />\n        </video> */}\n      </div>\n    </>\n  )\n}","import './App.css';\nimport VideoSandbox from \"./components/html_components/VideoSandbox\"\n\nfunction App() {\n  return (\n    <>\n      <div className=\"html-content-container\">\n        <VideoSandbox />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}